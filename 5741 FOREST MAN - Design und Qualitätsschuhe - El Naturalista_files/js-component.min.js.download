define(['module','underscore'],function(module,_){'use strict';let jsComponentUtils={config:module.config(),isHtmlSelectorAll:function(objectConfig){return this.isHtmlSelector(objectConfig,this.config.htmlSelectors.all);},isHtmlSelector:function(objectConfig,htmlSelector){let objectJsComponentHtmlSelector=objectConfig.jsComponentInfo.htmlSelector||false;if(_.isString(objectJsComponentHtmlSelector)){objectJsComponentHtmlSelector=htmlSelector===objectJsComponentHtmlSelector;}
return _.isBoolean(objectJsComponentHtmlSelector)?objectJsComponentHtmlSelector:false;},isObjectComponentType:function(objectConfig){return this.isComponentType(objectConfig,this.config.componentTypes.object);},isUiElementComponentType:function(objectConfig){return this.isComponentType(objectConfig,this.config.componentTypes.uiElement);},isComponentType:function(objectConfig,jsComponentType){let objectJsComponentType=objectConfig.jsComponentInfo.componentType||false;if(_.isString(objectJsComponentType)){objectJsComponentType=jsComponentType===objectJsComponentType;}
return _.isBoolean(objectJsComponentType)?objectJsComponentType:false;},isNoneRenderMode:function(objectConfig){return this.isRenderMode(objectConfig,this.config.renderModes.none);},isSimpleRenderMode:function(objectConfig){return this.isRenderMode(objectConfig,this.config.renderModes.simple);},isLayoutRenderMode:function(objectConfig){return this.isRenderMode(objectConfig,this.config.renderModes.layout);},isUiRenderMode:function(objectConfig){return this.isRenderMode(objectConfig,this.config.renderModes.ui);},isRenderMode:function(objectConfig,renderMode){let objectJsRenderMode=objectConfig.jsComponentInfo.renderMode||false;if(_.isString(objectJsRenderMode)){objectJsRenderMode=renderMode===objectJsRenderMode;}
return _.isBoolean(objectJsRenderMode)?objectJsRenderMode:false;},resolveReturn:function(component,componentConfig,extendedComponent){componentConfig.jsComponentInfo=componentConfig.jsComponentInfo||{};componentConfig.jsComponentInfo.renderMode=componentConfig.jsComponentInfo.renderMode||'Unknown';componentConfig.jsComponentInfo.renderSection=componentConfig.jsComponentInfo.renderSection||'Unknown';componentConfig.jsComponentInfo.component=componentConfig.jsComponentInfo.component||'Unknown';componentConfig.jsComponentInfo.componentType=componentConfig.jsComponentInfo.componentType||'Unknown';if(!_.isUndefined(extendedComponent)){if(_.isFunction(extendedComponent)){component=extendedComponent(componentConfig);}else if(_.isObject(extendedComponent)){component=_.extend({},extendedComponent,component,componentConfig)}else{this.log('Unable to extend from non object nor function','warn');}
return this.resolveReturn(component,componentConfig);}
if(this.isNoneRenderMode(componentConfig)||this.isSimpleRenderMode(componentConfig)){if(this.isObjectComponentType(componentConfig)){let initializationFunction=component[componentConfig.jsComponentInfo.component]||component['initialize']||false;if(!_.isFunction(initializationFunction)){component[componentConfig.jsComponentInfo.component]=(function(config){_.extend(this,config);return this;}).bind(component);initializationFunction=component[componentConfig.jsComponentInfo.component];}
initializationFunction.call(component,componentConfig);this.log('Resolved '+componentConfig.jsComponentInfo.component+', returning configured initialized provided object');return component;}
if(this.isUiElementComponentType(componentConfig)){this.log('Resolved '+componentConfig.jsComponentInfo.component+', returning configured initialized ui element');return component(componentConfig);}
this.log('Unable to resolve return value','warn');return component;}
if(this.isLayoutRenderMode(componentConfig)){let initializationFunction=component[componentConfig.jsComponentInfo.component]||component['initialize']||false;if(!_.isFunction(initializationFunction)){component[componentConfig.jsComponentInfo.component]=(function(config){_.extend(this,config);return this;}).bind(component);initializationFunction=component[componentConfig.jsComponentInfo.component];}
this.log('Resolved '+componentConfig.jsComponentInfo.component+', returning object / ui element initialization function');return initializationFunction.bind(component);}
if(this.isUiRenderMode(componentConfig)){if(this.isObjectComponentType(componentConfig)){if(!_.isFunction(component['initialize'])){component['initialize']=(function(config){return _.extend(this,config);}).bind(component);}
this.log('Resolved '+componentConfig.jsComponentInfo.component+', returning object constructor function');return component.initialize.bind(component);}
if(this.isUiElementComponentType(componentConfig)){this.log('Resolved '+componentConfig.jsComponentInfo.component+', returning ui element');return component;}
this.log('Unable to resolve return value','warn');return component;}
if(_.isObject(component)){let initializationFunction=component['initialize']||false;if(_.isFunction(initializationFunction)){return initializationFunction.bind(component);}}
return component;},log:function(message,logLevel){if(this.config.debug){logLevel=logLevel||'debug';console[logLevel]('[JS_COMPONENT_UTILS]:',message);}}};return jsComponentUtils.resolveReturn(jsComponentUtils,module.config());});